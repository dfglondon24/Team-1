<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>NGO Student Data</title>
    <style>
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            margin: 20px;
            background-color: #f0f8ff; /* Soft blue background */
            color: #333;
        }
        form {
            margin-bottom: 20px;
        }
        input, select {
            margin: 5px;
        }
        table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 20px;
        }
        th, td {
            border: 1px solid black;
            padding: 10px;
            text-align: left;
        }
        canvas {
            max-width: 400px;
            height: 200px;
        }
    </style>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
</head>
<body>

    <h1 style="text-align: center;">
        <img src="/Users/sofiagilardini/Documents/dfg/afrikids_logo.png" alt="Header Image" style="width: 20%; height: auto;">
    </h1>
    
    <h1>Student Data Entry</h1>
    
    <form id="studentForm">
        <label for="community">Community: </label>
        <input type="text" id="community" required>
        <label for="district">District: </label>
        <input type="text" id="district" required>
        <label for="region">Region: </label>
        <input type="text" id="region" required>
        <label for="name">Name: </label>
        <input type="text" id="name" required>
        <label for="age">Age: </label>
        <input type="number" id="age" required>
        <label for="education">Education Level: </label>
        <select id="education" required>
            <option value="Nursery">Nursery</option>
            <option value="Kindergarten">Kindergarten</option>
            <option value="JSS/JHS">JSS/JHS</option>
            <option value="Middle">Middle</option>
            <option value="SSS/SHS">SSS/SHS</option>
        </select>
        <label for="inEducation">Currently in Education: </label>
        <select id="inEducation" required>
            <option value="true">True</option>
            <option value="false">False</option>
        </select>
        <label for="date">Date: </label>
        <input type="date" id="date" required>
        <label for="literacyScore">Literacy Score: </label>
        <input type="number" id="literacyScore" required>
        <label for="numeracyScore">Numeracy Score: </label>
        <input type="number" id="numeracyScore" required>
        <button type="submit">Add Student</button>
    </form>

    <h2>Students List</h2>
    <table>
        <thead>
            <tr>
                <th>Date</th>
                <th>Community</th>
                <th>District</th>
                <th>Region</th>
                <th>Name</th>
                <th>Age</th>
                <th>Education Level</th>
                <th>Currently in Education</th>
                <th>Literacy Scores</th>
                <th>Numeracy Scores</th>
            </tr>
        </thead>
        <tbody id="studentTable"></tbody>
    </table>

    <h2>Summary Statistics</h2>
    <button onclick="generateSummary()">Generate Summary</button>
    <canvas id="communityChart"></canvas>
    <canvas id="districtChart"></canvas>
    <canvas id="regionChart"></canvas>
    <div id="educationSummary"></div>

    <script>
        let students = [];

        // Add dummy data
        const dummyData = [
            {
                community: 'Ashaiman',
                district: 'Tema',
                region: 'Greater Accra',
                name: 'John Doe',
                age: 10,
                education: 'JSS/JHS',
                inEducation: true,
                date: '2023-10-01',
                literacyScore: 75,
                numeracyScore: 80
            },
            {
                community: 'Ashaiman',
                district: 'Tema',
                region: 'Jaret',
                name: 'Mari Carm',
                age: 15,
                education: 'JSS/JHS',
                inEducation: false,
                date: '2023-02-01',
                literacyScore: 50,
                numeracyScore: 22
            },
            {
                community: 'Madina',
                district: 'Adentan',
                region: 'Greater Accra',
                name: 'Ax Zuus',
                age: 9,
                education: 'Nursery',
                inEducation: true,
                date: '2023-10-01',
                literacyScore: 30,
                numeracyScore: 20
            },
            {
                community: 'Ashaiman',
                district: 'Tema',
                region: 'Greater Accra',
                name: 'Jane Doe',
                age: 12,
                education: 'Middle',
                inEducation: false,
                date: '2023-09-10',
                literacyScore: 85,
                numeracyScore: 78
            },
            {
                community: 'Madina',
                district: 'Adentan',
                region: 'Greater Accra',
                name: 'Kwame Asante',
                age: 14,
                education: 'SSS/SHS',
                inEducation: true,
                date: '2023-09-20',
                literacyScore: 88,
                numeracyScore: 92
            },
            {
                community: 'Kumasi',
                district: 'Jau',
                region: 'Ashanti',
                name: 'Akua Mensah',
                age: 13,
                education: 'Middle',
                inEducation: true,
                date: '2023-10-15',
                literacyScore: 78,
                numeracyScore: 85
            },
            {
                community: 'Kumasi',
                district: 'Katur',
                region: 'Muor',
                name: 'Toma Uoz',
                age: 9,
                education: 'Nursery',
                inEducation: false,
                date: '2023-05-15',
                literacyScore: 32,
                numeracyScore: 15
            }
        ];

        students = [...dummyData];

        document.getElementById('studentForm').addEventListener('submit', function(event) {
            event.preventDefault();
            const community = document.getElementById('community').value;
            const district = document.getElementById('district').value;
            const region = document.getElementById('region').value;
            const name = document.getElementById('name').value;
            const age = document.getElementById('age').value;
            const education = document.getElementById('education').value;
            const inEducation = document.getElementById('inEducation').value === 'true';
            const date = document.getElementById('date').value;
            const literacyScore = document.getElementById('literacyScore').value;
            const numeracyScore = document.getElementById('numeracyScore').value;

            students.push({ community, district, region, name, age, education, inEducation, date, literacyScore, numeracyScore });
            localStorage.setItem('students', JSON.stringify(students)); // Save to localStorage
            displayStudents();
            this.reset();
        });

        function displayStudents() {
            const studentTable = document.getElementById('studentTable');
            studentTable.innerHTML = '';
            students.forEach((student, index) => {
                const row = document.createElement('tr');
                row.innerHTML = `
                    <td>${student.date}</td>
                    <td>${student.community}</td>
                    <td>${student.district}</td>
                    <td>${student.region}</td>
                    <td><a href="student.html?index=${index}" target="_blank">${student.name}</a></td>
                    <td>${student.age}</td>
                    <td>${student.education}</td>
                    <td>${student.inEducation}</td>
                    <td>${student.numeracyScore}</td>
                    <td>${student.literacyScore}</td>`;
                studentTable.appendChild(row);
            });
        }

        function generateSummary() {
            const summary = { community: {}, district: {}, region: {} };
            const educationLevels = ["Nursery", "Kindergarten", "JSS/JHS", "Middle", "SSS/SHS"];

            students.forEach(student => {
                ['community', 'district', 'region'].forEach(level => {
                    if (!summary[level][student[level]]) {
                        summary[level][student[level]] = {
                            levels: {},
                            inEducationCount: 0,
                            totalCount: 0
                        };
                        educationLevels.forEach(eduLevel => {
                            summary[level][student[level]].levels[eduLevel] = 0;
                        });
                    }
                    summary[level][student[level]].levels[student.education]++;
                    summary[level][student[level]].totalCount++;
                    if (student.inEducation) {
                        summary[level][student[level]].inEducationCount++;
                    }
                });
            });

            const communities = Object.keys(summary.community);
            const districts = Object.keys(summary.district);
            const regions = Object.keys(summary.region);

            const communityData = communities.map(community => educationLevels.map(level => summary.community[community].levels[level]));
            const districtData = districts.map(district => educationLevels.map(level => summary.district[district].levels[level]));
            const regionData = regions.map(region => educationLevels.map(level => summary.region[region].levels[level]));

            displayChart('communityChart', communities, communityData, educationLevels);
            displayChart('districtChart', districts, districtData, educationLevels);
            displayChart('regionChart', regions, regionData, educationLevels);
        }

        function displayChart(canvasId, labels, chartData, educationLevels) {
            const ctx = document.getElementById(canvasId).getContext('2d');
            new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: labels,
                    datasets: educationLevels.map((level, index) => ({
                        label: level,
                        data: chartData.map(data => data[index]),
                        backgroundColor: `rgba(${index * 50}, 99, 132, 0.2)`,
                        borderColor: `rgba(${index * 50}, 99, 132, 1)`,
                        borderWidth: 1
                    }))
                },
                options: {
                    scales: {
                        y: {
                            beginAtZero: true
                        }
                    },
                    responsive: false,
                    maintainAspectRatio: false
                }
            });
        }

        // Display students when page loads
        displayStudents();
    </script>
</body>
</html>
